<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d5/d55/USERGUIDE_8md" kind="file" language="Markdown">
    <compoundname>USERGUIDE.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>User<sp/>guide</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Protein</highlight></codeline>
<codeline><highlight class="normal">Proteins<sp/>are<sp/>loaded<sp/>from<sp/>PDB<sp/>files.<sp/>Atoms,<sp/>non-polymer<sp/>chemicals<sp/>and<sp/>bonds<sp/>can<sp/>be<sp/>loaded<sp/>and<sp/>displayed<sp/>in<sp/>various<sp/>colour<sp/>schemes:<sp/>chain<sp/>id,<sp/>atom,<sp/>residue,<sp/>etc....<sp/>Proteins<sp/>also<sp/>contain<sp/>the<sp/>amino<sp/>acid<sp/>sequences<sp/>of<sp/>the<sp/>individual<sp/>chains;<sp/>these<sp/>sequences<sp/>can<sp/>be<sp/>used<sp/>to<sp/>query<sp/>targeted<sp/>sites<sp/>(such<sp/>as<sp/>glycosylation<sp/>sites),<sp/>or<sp/>functional<sp/>regions<sp/>of<sp/>the<sp/>protein.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">virus_protein_s<sp/>=<sp/>Protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;6vyb.pdb&apos;,<sp/>&apos;sars-cov-2-v1.pdb&apos;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_instances=nb_protein_s,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_params=[11.5])</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb.png)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>Jupyter<sp/>Python<sp/>notebooks<sp/>provide<sp/>a<sp/>simple<sp/>and<sp/>convenient<sp/>way<sp/>to<sp/>create<sp/>molecular<sp/>systems.<sp/>The<sp/>BioExplorer<sp/>exposes<sp/>a<sp/>number<sp/>of<sp/>primitives<sp/>such<sp/>as<sp/>proteins<sp/>or<sp/>sugars,<sp/>as<sp/>well<sp/>as<sp/>complex<sp/>systems<sp/>like<sp/>viruses<sp/>or<sp/>membranes.<sp/>In<sp/>the<sp/>paragraph,<sp/>we<sp/>describe<sp/>how<sp/>to<sp/>load<sp/>and<sp/>visualize<sp/>a<sp/>single<sp/>protein,<sp/>its<sp/>glycosylation<sp/>sites,<sp/>and<sp/>the<sp/>glycans<sp/>attached<sp/>to<sp/>them.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">from<sp/>bioexplorer<sp/>import<sp/>BioExplorer,<sp/>Protein</highlight></codeline>
<codeline><highlight class="normal">be<sp/>=<sp/>BioExplorer(&apos;localhost:5000&apos;)</highlight></codeline>
<codeline><highlight class="normal">ace2_receptor<sp/>=<sp/>Protein(sources=[&apos;6m1d.pdb&apos;])</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.add_protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name=&apos;ACE2<sp/>receptor&apos;,<sp/>protein=ace2_receptor)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Glycan</highlight></codeline>
<codeline><highlight class="normal">Glycans<sp/>are<sp/>small<sp/>elements<sp/>(branches<sp/>of<sp/>monosaccharides)<sp/>that<sp/>are<sp/>attached<sp/>to<sp/>an<sp/>existing<sp/>protein<sp/>of<sp/>the<sp/>assembly.<sp/>Individual<sp/>glycan<sp/>trees<sp/>are<sp/>loaded<sp/>from<sp/>PDB<sp/>files<sp/>and<sp/>attached<sp/>to<sp/>the<sp/>glycosylation<sp/>sites<sp/>of<sp/>the<sp/>specified<sp/>protein.<sp/>By<sp/>default,<sp/>glycans<sp/>are<sp/>attached<sp/>to<sp/>all<sp/>available<sp/>glycosylation<sp/>sites,<sp/>but<sp/>a<sp/>set<sp/>of<sp/>specific<sp/>sites<sp/>can<sp/>be<sp/>specified.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">be.add_multiple_glycans(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>glycan_type=be.NAME_GLYCAN_HIGH_MANNOSE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>protein_name=be.NAME_PROTEIN_S_CLOSED,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>paths=[&apos;high_mannose_glycan.pdb&apos;])</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>RNA<sp/>sequence</highlight></codeline>
<codeline><highlight class="normal">An<sp/>RNA<sp/>sequence<sp/>can<sp/>be<sp/>loaded<sp/>from<sp/>a<sp/>text<sp/>sequence<sp/>of<sp/>nucleotides.<sp/>Various<sp/>shapes<sp/>can<sp/>be<sp/>selected<sp/>to<sp/>represent<sp/>the<sp/>RNA<sp/>sequence:<sp/>Trefoil<sp/>knot,<sp/>torus,<sp/>star,<sp/>etc…..<sp/>This<sp/>allows<sp/>the<sp/>sequence<sp/>to<sp/>be<sp/>efficiently<sp/>packed<sp/>into<sp/>a<sp/>given<sp/>volume.<sp/>A<sp/>different<sp/>color<sp/>is<sp/>assigned<sp/>per<sp/>type<sp/>of<sp/>nucleotides.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Membrane</highlight></codeline>
<codeline><highlight class="normal">A<sp/>membrane<sp/>is<sp/>an<sp/>assembly<sp/>of<sp/>phospholipids.<sp/>Phospholipids<sp/>structures<sp/>are<sp/>created<sp/>following<sp/>the<sp/>process<sp/>described<sp/>in<sp/>the<sp/>VMD<sp/>(https://www.ks.uiuc.edu/Research/vmd/)<sp/>Membrane<sp/>Proteins<sp/>Tutorial<sp/>(http://www.ks.uiuc.edu/Training/Tutorials/).<sp/>The<sp/>assembly<sp/>itself<sp/>is<sp/>generated<sp/>by<sp/>the<sp/>BioExplorer,<sp/>for<sp/>a<sp/>given<sp/>shape,<sp/>and<sp/>a<sp/>number<sp/>of<sp/>instances<sp/>of<sp/>phospholipids.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">virus_membrane<sp/>=<sp/>Membrane(sources=[&apos;popc.pdb&apos;],<sp/>number_of_instances=15000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Surfactants</highlight></codeline>
<codeline><highlight class="normal">The<sp/>BioExplorer<sp/>exposes<sp/>an<sp/>API<sp/>to<sp/>help<sp/>create<sp/>3D<sp/>models<sp/>of<sp/>surfactants,<sp/>according<sp/>to<sp/>given<sp/>proteins<sp/>for<sp/>the<sp/>branches<sp/>and<sp/>for<sp/>the<sp/>head.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">surfactant_a<sp/>=<sp/>Surfactant(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&apos;Surfactant-A&apos;,</highlight></codeline>
<codeline><highlight class="normal">surfactant_protein=be.SURFACTANT_PROTEIN_A,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_source=surfactant_head_source,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch_source=surfactant_branch_source)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">be.add_surfactant(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfactant=surfactant_a,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation=protein_representation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atom_radius_multiplier=protein_radius_multiplier,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position=Vector3(),<sp/>random_seed=2)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/surfactant-d.png)</highlight></codeline>
<codeline><highlight class="normal">![](./images/surfactant-a.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Virus</highlight></codeline>
<codeline><highlight class="normal">A<sp/>viral<sp/>particle<sp/>(=<sp/>“virus”)<sp/>is<sp/>an<sp/>assembly<sp/>consisting<sp/>of<sp/>a<sp/>membrane,<sp/>an<sp/>RNA<sp/>sequence,<sp/>and<sp/>a<sp/>given<sp/>number<sp/>of<sp/>S,<sp/>M<sp/>and<sp/>E<sp/>proteins.<sp/>The<sp/>virus<sp/>has<sp/>a<sp/>predefined<sp/>spherical<sp/>shape<sp/>defined<sp/>by<sp/>its<sp/>radius.<sp/>The<sp/>default<sp/>parameters<sp/>for<sp/>the<sp/>virus<sp/>are<sp/>a<sp/>radius<sp/>of<sp/>45<sp/>nanometers,<sp/>62<sp/>S<sp/>proteins,<sp/>42<sp/>E<sp/>proteins,<sp/>and<sp/>50<sp/>M<sp/>proteins.<sp/>Dimensions<sp/>and<sp/>concentrations<sp/>were<sp/>retrieved<sp/>from<sp/>the<sp/>literature<sp/>(see<sp/>list<sp/>of<sp/>dimensions<sp/>and<sp/>concentrations<sp/>in<sp/>appendix<sp/>B2<sp/>and<sp/>B3)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">virus_protein_s<sp/>=<sp/>Protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;6vyb.pdb&apos;,<sp/>&apos;sars-cov-2-v1.pdb&apos;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_instances=62,<sp/>assembly_params=[11.5])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">virus_protein_e<sp/>=<sp/>Protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;QHD43418a.pdb&apos;],number_of_instances=42,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_params=[3.0])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">virus_protein_m<sp/>=<sp/>Protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;QHD43419a.pdb&apos;],<sp/>number_of_instances=50,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_params=[2.0])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">virus_membrane<sp/>=<sp/>Membrane(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources=[&apos;popc.pdb&apos;],<sp/>number_of_instances=15000)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">rna_sequence<sp/>=<sp/>RNASequence(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>source=&apos;sars-cov-2.rna&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>shape=be.RNA_SHAPE_TREFOIL_KNOT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_params=[11.0,<sp/>0.5],</highlight></codeline>
<codeline><highlight class="normal">t_range=Vector2(0,<sp/>30.5<sp/>*<sp/>math.pi),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_params=Vector3(1.51,<sp/>1.12,<sp/>1.93))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">coronavirus<sp/>=<sp/>Virus(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name=&apos;coronavirus&apos;,<sp/>protein_s=virus_protein_s,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>protein_e=virus_protein_e,<sp/>protein_m=virus_protein_m,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>membrane=virus_membrane,<sp/>rna_sequence=rna_sequence,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_params=[45.0,<sp/>1,<sp/>0.025,<sp/>2,<sp/>0.4])</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>order<sp/>to<sp/>ease<sp/>the<sp/>process<sp/>of<sp/>creating<sp/>3D<sp/>detailed<sp/>representations<sp/>of<sp/>viruses,<sp/>an<sp/>advanced<sp/>API<sp/>function<sp/>with<sp/>the<sp/>default<sp/>coronavirus<sp/>parameters<sp/>is<sp/>provided<sp/>by<sp/>the<sp/>BioExplorer:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">be.add_coronavirus(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name=&apos;Coronavirus&apos;,<sp/>resource_folder=resource_folder,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>representation=be.REPRESENTATION_ATOMS,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>add_glycans=True)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/coronavirus.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Host<sp/>cell</highlight></codeline>
<codeline><highlight class="normal">A<sp/>host<sp/>cell<sp/>is<sp/>an<sp/>assembly<sp/>composed<sp/>of<sp/>a<sp/>membrane<sp/>of<sp/>a<sp/>given<sp/>size<sp/>and<sp/>shape<sp/>(cylindric,<sp/>sinusoidal,<sp/>ect),<sp/>and<sp/>a<sp/>given<sp/>number<sp/>of<sp/>ACE2<sp/>receptors.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">ace2_receptor<sp/>=<sp/>Protein(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;6m1d.pdb&apos;],<sp/>number_of_instances=nb_receptors,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>position=Vector3(0.0,<sp/>6.0,<sp/>0.0))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">membrane<sp/>=<sp/>Membrane(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sources=[&apos;popc.pdb&apos;],<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_instances=1200000)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">host_cell<sp/>=<sp/>Cell(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name=&apos;Host<sp/>cell&apos;,<sp/>size=size,<sp/>extra_parameters=[height],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>shape=be.ASSEMBLY_SHAPE_SINUSOIDAL,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>membrane=membrane,<sp/>receptor=ace2_receptor)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/cell.png)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Glycans<sp/>Models</highlight></codeline>
<codeline><highlight class="normal">Glycan<sp/>trees<sp/>models<sp/>are<sp/>retrieved<sp/>from<sp/>Glycam<sp/>Builder<sp/>(http://glycam.org/Pre-builtLibraries.jsp).<sp/>Only<sp/>one<sp/>exemplar<sp/>of<sp/>each<sp/>type<sp/>of<sp/>glycan<sp/>(HM,<sp/>C,<sp/>Hy<sp/>and<sp/>O-type)<sp/>is<sp/>represented<sp/>in<sp/>the<sp/>current<sp/>reconstruction<sp/>and<sp/>listed<sp/>in<sp/>appendix<sp/>C1.<sp/></highlight></codeline>
<codeline><highlight class="normal">Glycosylation<sp/>sites<sp/>can<sp/>be<sp/>visualized<sp/>by<sp/>applying<sp/>a<sp/>specific<sp/>color<sp/>scheme<sp/>(COLOR_SCHEME_GLYCOSYLATION_SITE)<sp/>to<sp/>the<sp/>protein.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_color_scheme(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>color_scheme=be.COLOR_SCHEME_GLYCOSYLATION_SITE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>palette_name=&apos;Set1&apos;,<sp/>palette_size=2)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb_glycosylation_sites.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Glycosylation<sp/>sites<sp/>are<sp/>automatically<sp/>identified<sp/>according<sp/>to<sp/>the<sp/>amino<sp/>acids<sp/>sequence.<sp/>When<sp/>a<sp/>N<sp/>is<sp/>found<sp/>in<sp/>the<sp/>sequence,<sp/>a<sp/>glycosylation<sp/>site<sp/>exists<sp/>if<sp/>the<sp/>next<sp/>amino<sp/>acid<sp/>in<sp/>the<sp/>sequence<sp/>is<sp/>a<sp/>not<sp/>a<sp/>P,<sp/>and<sp/>the<sp/>following<sp/>one<sp/>is<sp/>a<sp/>T<sp/>or<sp/>a<sp/>S.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Using<sp/>that<sp/>simple<sp/>algorithm,<sp/>glycans<sp/>trees<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>Protein<sp/>object.<sp/>Glycans<sp/>make<sp/>use<sp/>of<sp/>a<sp/>generic<sp/>python<sp/>object<sp/>called<sp/>Sugars.<sp/>By<sp/>providing<sp/>the<sp/>name<sp/>of<sp/>the<sp/>assembly<sp/>and<sp/>the<sp/>target<sp/>protein,<sp/>the<sp/>BioExplorer<sp/>automatically<sp/>adds<sp/>the<sp/>Glycans<sp/>to<sp/>the<sp/>identified<sp/>glycosylation<sp/>sites.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">glycan_name<sp/>=<sp/>name<sp/>+<sp/>&apos;_Complex&apos;</highlight></codeline>
<codeline><highlight class="normal">glycans<sp/>=<sp/>Sugars(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>protein_name=name,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name=glycan_name,<sp/>source=&apos;10.pdb&apos;)</highlight></codeline>
<codeline><highlight class="normal">Status<sp/>=<sp/>be.add_glycans(glycans)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb_glycans.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Multiple<sp/>types<sp/>of<sp/>glycan<sp/>trees<sp/>can<sp/>be<sp/>also<sp/>added<sp/>to<sp/>the<sp/>Protein<sp/>object,<sp/>for<sp/>specific<sp/>glycosylation<sp/>sites.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">high_mannose_glycans<sp/>=<sp/>Sugars(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>site_indices=[80,<sp/>141,<sp/>253],<sp/>...)</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.add_glycans(high_mannose_glycans)</highlight></codeline>
<codeline><highlight class="normal">complex_glycans<sp/>=<sp/>Sugars(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>site_indices=[36,<sp/>93,<sp/>168],<sp/>...)</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.add_glycans(complex_glycans)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb_all_glycans.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Visualization</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>specific<sp/>site<sp/>or<sp/>an<sp/>amino-acid<sp/>sequence<sp/>can<sp/>be<sp/>visualized<sp/>on<sp/>the<sp/>protein<sp/>by<sp/>providing<sp/>a<sp/>range<sp/>of<sp/>indices,<sp/>and<sp/>applying<sp/>a<sp/>specific<sp/>color<sp/>scheme<sp/>(COLOR_SCHEME_AMINO_ACID_SEQUENCE)<sp/>to<sp/>the<sp/>protein.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_amino_acid_sequence_as_range(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,<sp/>amino_acid_range=[500,750])</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_color_scheme(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>color_scheme=be.COLOR_SCHEME_AMINO_ACID_SEQUENCE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>palette_name=&apos;Set1&apos;,<sp/>palette_size=2)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb_aa_by_range.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>specific<sp/>site<sp/>or<sp/>an<sp/>amino-acid<sp/>sequence<sp/>can<sp/>also<sp/>be<sp/>specified<sp/>by<sp/>substring<sp/>of<sp/>the<sp/>sequence,<sp/>and<sp/>applying<sp/>a<sp/>specific<sp/>color<sp/>scheme<sp/>(COLOR_SCHEME_AMINO_ACID_SEQUENCE)<sp/>to<sp/>the<sp/>protein.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">aa_sequence<sp/>=<sp/>&apos;ANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRD&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_amino_acid_sequence_as_string(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,<sp/>amino_acid_sequence=aa_sequence)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_color_scheme(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>color_scheme=be.COLOR_SCHEME_AMINO_ACID_SEQUENCE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>palette_name=&apos;Set1&apos;,<sp/>palette_size=2)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">![](./images/6vyb_aa_by_string.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Functional<sp/>regions<sp/>of<sp/>a<sp/>protein<sp/>can<sp/>be<sp/>visualized<sp/>by<sp/>providing<sp/>the<sp/>indices<sp/>of<sp/>the<sp/>regions<sp/>in<sp/>the<sp/>amino<sp/>acids<sp/>sequence,<sp/>and<sp/>applying<sp/>a<sp/>specific<sp/>color<sp/>scheme<sp/>(COLOR_SCHEME_REGIONS)<sp/>to<sp/>the<sp/>protein.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">region_indices_and_colors<sp/>=<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[1,<sp/>grey],<sp/>[16,<sp/>blue],<sp/>[306,<sp/>grey],<sp/>[330,<sp/>green],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[438,<sp/>dark_green],<sp/>[507,<sp/>green],<sp/>[522,<sp/>grey],<sp/>[816,<sp/>red],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[835,<sp/>grey],<sp/>[908,<sp/>yellow],<sp/>[986,<sp/>grey],<sp/>[1076,<sp/>cyan],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[1274,<sp/>grey],<sp/>[2000,<sp/>grey<sp/>]]</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>be.set_protein_color_scheme(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assembly_name=name,<sp/>name=name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>color_scheme=be.COLOR_SCHEME_REGION,<sp/>palette=palette)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](./images/6vyb_regions.png)</highlight></codeline>
    </programlisting>
    <location file="/home/favreau/git/BioExplorer/bioexplorer/pythonsdk/doc/source/USERGUIDE.md"/>
  </compounddef>
</doxygen>
