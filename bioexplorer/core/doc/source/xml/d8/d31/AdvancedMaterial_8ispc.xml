<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d8/d31/AdvancedMaterial_8ispc" kind="file" language="C++">
    <compoundname>AdvancedMaterial.ispc</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>The<sp/>Blue<sp/>Brain<sp/>BioExplorer<sp/>is<sp/>a<sp/>tool<sp/>for<sp/>scientists<sp/>to<sp/>extract<sp/>and<sp/>analyse</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>scientific<sp/>data<sp/>from<sp/>visualization</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Copyright<sp/>2020-2021<sp/>Blue<sp/>BrainProject<sp/>/<sp/>EPFL</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>version.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>details.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;AdvancedMaterial.ih&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>void*<sp/>uniform<sp/>AdvancedMaterial_create(void*<sp/>uniform<sp/>cppE)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uniform<sp/>AdvancedMaterial*<sp/>uniform<sp/>mat<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>new<sp/>uniform<sp/>AdvancedMaterial;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mat-&gt;super.cppEquivalent<sp/>=<sp/>cppE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>mat;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>void<sp/>AdvancedMaterial_set(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void*<sp/>uniform<sp/>_mat,<sp/>const<sp/>void*<sp/>uniform<sp/>map_d,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_d,<sp/>const<sp/>uniform<sp/>float&amp;<sp/>d,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>uniform<sp/>map_refraction,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_refraction,<sp/>const<sp/>uniform<sp/>float&amp;<sp/>refraction,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>uniform<sp/>map_reflection,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_reflection,<sp/>const<sp/>uniform<sp/>float&amp;<sp/>reflection,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>uniform<sp/>map_a,<sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_a,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>float&amp;<sp/>a,<sp/>const<sp/>uniform<sp/>float&amp;<sp/>glossiness,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>uniform<sp/>map_Kd,<sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_Kd,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>vec3f&amp;<sp/>Kd,<sp/>const<sp/>void*<sp/>uniform<sp/>map_Ks,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_Ks,<sp/>const<sp/>uniform<sp/>vec3f&amp;<sp/>Ks,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>uniform<sp/>map_Ns,<sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_Ns,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>float&amp;<sp/>Ns,<sp/>const<sp/>void*<sp/>uniform<sp/>map_Bump,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>affine2f&amp;<sp/>xform_Bump,<sp/>const<sp/>uniform<sp/>linear2f&amp;<sp/>rot_Bump,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>MaterialShadingMode&amp;<sp/>shadingMode,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>float&amp;<sp/>userParameter,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>MaterialChameleonMode&amp;<sp/>chameleonMode,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>uniform<sp/>uint32&amp;<sp/>nodeId)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uniform<sp/>AdvancedMaterial*<sp/>uniform<sp/>self<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uniform<sp/>AdvancedMaterial<sp/>*<sp/>uniform)<sp/>_mat;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_d<sp/>=<sp/>make_TextureParam((Texture2D*)map_d,<sp/>xform_d);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;d<sp/>=<sp/>d;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_refraction<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_TextureParam((Texture2D*)map_refraction,<sp/>xform_refraction);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;refraction<sp/>=<sp/>refraction;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_reflection<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_TextureParam((Texture2D*)map_reflection,<sp/>xform_reflection);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;reflection<sp/>=<sp/>reflection;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_a<sp/>=<sp/>make_TextureParam((Texture2D*)map_a,<sp/>xform_a);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;a<sp/>=<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;glossiness<sp/>=<sp/>glossiness;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_Kd<sp/>=<sp/>make_TextureParam((Texture2D*)map_Kd,<sp/>xform_Kd);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;Kd<sp/>=<sp/>Kd;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_Ks<sp/>=<sp/>make_TextureParam((Texture2D*)map_Ks,<sp/>xform_Ks);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;Ks<sp/>=<sp/>Ks;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_Ns<sp/>=<sp/>make_TextureParam((Texture2D*)map_Ns,<sp/>xform_Ns);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;Ns<sp/>=<sp/>Ns;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;map_Bump<sp/>=<sp/>make_TextureParam((Texture2D*)map_Bump,<sp/>xform_Bump);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;rot_Bump<sp/>=<sp/>rot_Bump;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;shadingMode<sp/>=<sp/>shadingMode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;userParameter<sp/>=<sp/>userParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;chameleonMode<sp/>=<sp/>chameleonMode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self-&gt;nodeId<sp/>=<sp/>nodeId;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/favreau/git/BioExplorer/bioexplorer/core/module/ispc/render/AdvancedMaterial.ispc"/>
  </compounddef>
</doxygen>
