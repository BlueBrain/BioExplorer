/*
 * The Blue Brain BioExplorer is a tool for scientists to extract and analyse
 * scientific data from visualization
 *
 * Copyright 2020-2023 Blue BrainProject / EPFL
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

// clang-format off

// CGAL
#if @CGAL_FOUND@==1
#define USE_CGAL
#endif

// Assimp
#if @ASSIMP_FOUND@==1
#define USE_ASSIMP
#endif

// OSPRay
#if @OSPRAY_FOUND@==1
#define USE_OSPRAY
#endif

// OptiX 6
#if @OPTIX6_FOUND@==1
#define USE_OPTIX6
#endif

// Networking
#if @NETWORKING_FOUND@==1
#define USE_NETWORKING
#endif

// LASLIB_FOUND
#if @LASLIB_FOUND@==1
#define USE_LASLIB
#endif

// MORPHIO_FOUND
#if @MorphIO_FOUND@==1
#define USE_MORPHIO
#endif

// Memory alignment (optional). Can be necessary for compatibility between multiple engines
#define PLATFORM_MEMORY_ALIGNMENT @PLATFORM_MEMORY_ALIGNMENT@ 
#ifdef PLATFORM_MEMORY_ALIGNMENT
#define __MEMORY_ALIGNMENT__ UINT8_T alignment[256 * @PLATFORM_MEMORY_ALIGNMENT@];
#else
#define __MEMORY_ALIGNMENT__ UINT8_T alignment[4096];
#endif

// clang-format-on
